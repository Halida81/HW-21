[{"/Users/user/Downloads/01-starting-project 3/src/index.js":"1","/Users/user/Downloads/01-starting-project 3/src/App.js":"2","/Users/user/Downloads/01-starting-project 3/src/components/SimpleInput.js":"3","/Users/user/Downloads/01-starting-project 3/src/components/BasicForm.js":"4"},{"size":142,"mtime":1616595887000,"results":"5","hashOfConfig":"6"},{"size":218,"mtime":1653825328324,"results":"7","hashOfConfig":"6"},{"size":1008,"mtime":1653626768719,"results":"8","hashOfConfig":"6"},{"size":2932,"mtime":1653824211443,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1u14krz",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Downloads/01-starting-project 3/src/index.js",[],["20","21"],"/Users/user/Downloads/01-starting-project 3/src/App.js",[],"/Users/user/Downloads/01-starting-project 3/src/components/SimpleInput.js",["22","23"],"import { useState, useRef} from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('')\n  const [isValid,setIsValid] = useState(false)\n  const inputRef = useRef()\n\nconst changeInputHandler = (e) =>{\n  setEnteredName(e.target.value)\n}\n\nconst formSubmitHandler = (e )=>{\n  e.preventDefault()\n\n  if(enteredName.trim() ===''){\n    setIsValid(true)\n  }\n  setIsValid(false)\nreturn\nconst enteredInputName =  inputRef.current.value\n }\n\n const nameInputClasses= isValid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={inputRef} type='text' id='name' onChange={changeInputHandler} value={enteredName}/>\n      </div>\n      {isValid && <p>Name must not be empty</p> }\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput; //VERSION_1\n","/Users/user/Downloads/01-starting-project 3/src/components/BasicForm.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":20,"column":1,"nodeType":"30","messageId":"31","endLine":20,"endColumn":49},{"ruleId":"32","severity":1,"message":"33","line":20,"column":7,"nodeType":"34","messageId":"35","endLine":20,"endColumn":23},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","no-unused-vars","'enteredInputName' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]